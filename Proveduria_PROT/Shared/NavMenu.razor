@page "/navigation"
@using Proveduria_PROT.Authentication
@using System.Security.Claims
@inject AuthenticationStateProvider authStateProvider
@inject UserAccountService userAccountService
@inject NavigationManager navManager

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOM8Sf0f5D+P0m70XTKiWjTHC6f1pHhuUpA0E6N" crossorigin="anonymous">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet" />

<div class="top-row ps-3 navbar navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand d-flex align-items-center" href="">
            <img src="@profileImagePath" alt="Profile" style="width: 30px; height: 30px; border-radius: 50%; object-fit: cover;" class="me-2" />
            @roleTitle
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass bg-dark text-white d-flex flex-column nav-menu-container" @onclick="ToggleNavMenu" style="height: 93.8vh;">
    <nav class="flex-column flex-grow-1 overflow-auto nav-menu-content" style="max-height: calc(100vh - 100px);">

        <!--INICIO ADMIN-->
        <AuthorizeView Roles="Administrador">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link text-white d-flex justify-content-between align-items-center" href="/crearusuario">
                        <div>
                            <Heroicon Name="UserPlus" Style="outline" class="me-2 small-icon" />
                            Usuarios
                        </div>
                        <Heroicon Name="chevron-right" Style="outline" class="small-icon" />
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
        <!--FINAL ADMIN-->

        <!-- INICIO Comprador-->
        <AuthorizeView Roles="Comprador">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link text-white d-flex justify-content-between align-items-center" href="nuevaorden">
                        <div>
                            <Heroicon Name="document-plus" Style="outline" class="me-2 small-icon" />
                            Crear Orden
                        </div>
                        <Heroicon Name="chevron-right" Style="outline" class="small-icon" />
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link text-white d-flex justify-content-between align-items-center" href="estadoordenes">
                        <div>
                            <Heroicon Name="clipboard-document-list" Style="outline" class="me-2 small-icon" />
                            Ordenes
                        </div>
                        <Heroicon Name="chevron-right" Style="outline" class="small-icon" />
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link text-white d-flex justify-content-between align-items-center" href="fetchdata">
                        <div>
                            <Heroicon Name="document-arrow-down" Style="outline" class="me-2 small-icon" />
                            Ordenes Reportes
                        </div>
                        <Heroicon Name="chevron-right" Style="outline" class="small-icon" />
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
        <!-- FIN Comprador-->


        <!--INICIO JEFATURA-->
        <!--FIN JEFATURA-->

    </nav>

    <div class="nav-menu-footer mt-auto">
        <AuthorizeView Roles="Administrador,Comprador,jefatura,aprobador">
            <Authorized>
                <hr class="bg-secondary">
                <div class="nav-item px-3">
                    <NavLink class="nav-link text-white d-flex justify-content-between align-items-center" href="about">
                        <div>
                            <Heroicon Name="InformationCircle" Style="outline" class="me-2 small-icon" />
                            Acerca de
                        </div>
                        <Heroicon Name="chevron-right" Style="outline" class="small-icon" />
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link text-white d-flex justify-content-between align-items-center" href="javascript:void(0);" @onclick="Logout">
                        <div>
                            <Heroicon Name="arrow-left-start-on-rectangle" Style="outline" class="me-2 small-icon" />
                            Salir
                        </div>
                        <Heroicon Name="chevron-right" Style="outline" class="small-icon" />
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private string profileImagePath = "img/default.jpg"; // Imagen por defecto
    private string roleTitle = "Proveduria Analisis";
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            profileImagePath = user.FindFirst("ProfileImagePath")?.Value ?? "img/default.jpg";
            roleTitle = user.FindFirst(ClaimTypes.Role)?.Value ?? "Proveduria Analisis";

            Console.WriteLine($"Profile Image Path: {profileImagePath}"); // Debugging
            Console.WriteLine($"Role Title: {roleTitle}");

            StateHasChanged(); // Forzar una actualización de la UI
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        // Mostrar alerta de despedida con fondo oscuro y timer
        await js.InvokeVoidAsync("Swal.fire", new
        {
            title = "Sesión cerrada",
            text = "Has cerrado sesión correctamente.",
            icon = "info",
            background = "#1e1e1e",  // Fondo oscuro
            color = "#fff",  // Texto blanco
            timer = 1500,  // Tiempo en milisegundos
            showConfirmButton = false  // No mostrar el botón de confirmación
        });

        // Esperar un poco para dar tiempo a que la alerta se cierre antes de redirigir
        await Task.Delay(1000);

        // Actualizar el estado de autenticación
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);

        // Redirigir a la página principal
        navManager.NavigateTo("/", true);
    }
}
